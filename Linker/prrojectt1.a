;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Evaluation
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 11/28/2018
;Author  : Freeware, for evaluation and non-commercial use only
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <delay.h>
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;int move = 0;
;float adc_data;
;float max_v = 3.99;

	.DSEG
;float min_v = 2.00;
;char disp[16];
;
;void main(void)
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0026 // Declare your local variables here
; 0000 0027 
; 0000 0028 // Input/Output Ports initialization
; 0000 0029 // Port A initialization
; 0000 002A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002C PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002D DDRA=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002E 
; 0000 002F // Port B initialization
; 0000 0030 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0031 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0032 PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0033 DDRB=0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0034 
; 0000 0035 // ADC initialization
; 0000 0036 // ADC Clock frequency: 1000.000 kHz
; 0000 0037 // ADC Voltage Reference: AREF pin
; 0000 0038 ADMUX=0b00000000;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0039 ADCSRA=(1<<ADEN)|(0<<ADSC)|(0<<ADATE)|(0<<ADIF)|(0<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003A 
; 0000 003B #asm("sei")
;PCODE: $0000001A VOL: 0
	sei
;PCODE: $0000001B VOL: 0
; 0000 003C PORTD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003D DDRD=0x30;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 003E 
; 0000 003F TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (1<<WGM11) | (0<<WGM10);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0040 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0041 ICR1H=0x9C;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0042 ICR1L=0x40;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0043 
; 0000 0044 
; 0000 0045 // Alphanumeric LCD initialization
; 0000 0046 // Connections specified in the
; 0000 0047 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0048 // RS - PORTB Bit 0
; 0000 0049 // RD - PORTB Bit 1
; 0000 004A // EN - PORTB Bit 2
; 0000 004B // D4 - PORTB Bit 4
; 0000 004C // D5 - PORTB Bit 5
; 0000 004D // D6 - PORTB Bit 6
; 0000 004E // D7 - PORTB Bit 7
; 0000 004F // Characters/line: 16
; 0000 0050 lcd_init(16);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0051 OCR1A=2000;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0052 OCR1B=2000;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0053 while (1)
;PCODE: $0000002F VOL: 0
; 0000 0054       {
; 0000 0055         delay_us(10);
;PCODE: $00000030 VOL: 0
; 0000 0056         if (OCR1A==4000){
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0057             OCR1A=2000;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0058             OCR1B=OCR1B+200;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0059         }
; 0000 005A         if (OCR1B==4000){
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 005B             OCR1B=2000;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 005C         }
; 0000 005D         if(move==0)
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 005E         {
; 0000 005F         OCR1A=OCR1A+20;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0060         }
; 0000 0061         ADCSRA |= (1<<ADSC);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0062         while((ADCSRA&(1<<ADIF))==0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0063         adc_data=ADCW/204.8;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0064         if(adc_data>=max_v){
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0065             max_v=adc_data;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0066             move=1;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0067             delay_ms(100);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0068         }
; 0000 0069         else if(adc_data>min_v && adc_data<max_v)
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 006A         {
; 0000 006B             move=0;
;PCODE: $0000006D VOL: 0
; 0000 006C         }
; 0000 006D         ftoa(adc_data,2,disp);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 006E         lcd_gotoxy(0,0);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 006F         lcd_puts(disp);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0070         delay_ms(300);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0071       }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0072 }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
