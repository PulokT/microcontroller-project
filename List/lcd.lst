
AVRASM ver. 2.1.30  C:\cvavreval\bin\List\lcd.asm Wed Nov 28 16:41:03 2018

C:\cvavreval\bin\List\lcd.asm(1059): warning: Register r5 already defined by the .DEF directive
C:\cvavreval\bin\List\lcd.asm(1060): warning: Register r4 already defined by the .DEF directive
C:\cvavreval\bin\List\lcd.asm(1061): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Evaluation
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 0031
00002b 0034
00002c 0037
00002d 002a      	.DB  0x31,0x0,0x34,0x0,0x37,0x0,0x2A,0x0
00002e 0032
00002f 0035
000030 0038
000031 0030      	.DB  0x32,0x0,0x35,0x0,0x38,0x0,0x30,0x0
000032 0033
000033 0036
000034 0039
000035 0023      	.DB  0x33,0x0,0x36,0x0,0x39,0x0,0x23,0x0
                 _0x2000003:
000036 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000037 0002      	.DW  0x02
000038 0260      	.DW  __base_y_G100
000039 006c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00003a 0000      	.DW  0
                 
                 __RESET:
00003b 94f8      	CLI
00003c 27ee      	CLR  R30
00003d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003e e0f1      	LDI  R31,1
00003f bffb      	OUT  GICR,R31
000040 bfeb      	OUT  GICR,R30
000041 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000042 e1f8      	LDI  R31,0x18
000043 bdf1      	OUT  WDTCR,R31
000044 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000045 e08d      	LDI  R24,(14-2)+1
000046 e0a2      	LDI  R26,2
000047 27bb      	CLR  R27
                 __CLEAR_REG:
000048 93ed      	ST   X+,R30
000049 958a      	DEC  R24
00004a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004e 93ed      	ST   X+,R30
00004f 9701      	SBIW R24,1
000050 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000051 e6ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000052 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000053 9185      	LPM  R24,Z+
000054 9195      	LPM  R25,Z+
000055 9700      	SBIW R24,0
000056 f061      	BREQ __GLOBAL_INI_END
000057 91a5      	LPM  R26,Z+
000058 91b5      	LPM  R27,Z+
000059 9005      	LPM  R0,Z+
00005a 9015      	LPM  R1,Z+
00005b 01bf      	MOVW R22,R30
00005c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005d 9005      	LPM  R0,Z+
00005e 920d      	ST   X+,R0
00005f 9701      	SBIW R24,1
000060 f7e1      	BRNE __GLOBAL_INI_LOOP
000061 01fb      	MOVW R30,R22
000062 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000063 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000064 bfed      	OUT  SPL,R30
000065 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000066 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000067 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000068 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000069 940c 006b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#define keypad_ddr DDRB
                 ;#define keypad_port PORTB
                 ;#define input_data PINB
                 ;void main(void)
                 ; 0000 0007 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0008 keypad_ddr=0xF0;
00006b efe0      	LDI  R30,LOW(240)
00006c bbe7      	OUT  0x17,R30
                 ; 0000 0009 // RS - PORTA Bit 0
                 ; 0000 000A // RD - PORTA Bit 1
                 ; 0000 000B // EN - PORTA Bit 2
                 ; 0000 000C // D4 - PORTA Bit 4
                 ; 0000 000D // D5 - PORTA Bit 5
                 ; 0000 000E // D6 - PORTA Bit 6
                 ; 0000 000F // D7 - PORTA Bit 7
                 ; 0000 0010 // Characters/line: 16
                 ; 0000 0011 lcd_init(16);
00006d e1e0      	LDI  R30,LOW(16)
00006e 93ea      	ST   -Y,R30
00006f d0b4      	RCALL _lcd_init
                 ; 0000 0012 while (1)
                 _0x3:
                 ; 0000 0013       {
                 ; 0000 0014        keypad_port=0b11011111;
000070 edef      	LDI  R30,LOW(223)
000071 d0e4      	RCALL SUBOPT_0x0
                 ; 0000 0015        lcd_gotoxy(0,0);
                 ; 0000 0016        if (input_data.0==0)
000072 99b0      	SBIC 0x16,0
000073 c003      	RJMP _0x6
                 ; 0000 0017             lcd_putsf("1");
                +
000074 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000075 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000076 d0e4      	RCALL SUBOPT_0x1
                 ; 0000 0018         if (input_data.1==0)
                 _0x6:
000077 99b1      	SBIC 0x16,1
000078 c003      	RJMP _0x7
                 ; 0000 0019             lcd_putsf("4");
                +
000079 e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2 ) )
00007a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW1FN _0x0,2
00007b d0df      	RCALL SUBOPT_0x1
                 ; 0000 001A         if (input_data.2==0)
                 _0x7:
00007c 99b2      	SBIC 0x16,2
00007d c003      	RJMP _0x8
                 ; 0000 001B             lcd_putsf("7");
                +
00007e e5e8     +LDI R30 , LOW ( 2 * _0x0 + ( 4 ) )
00007f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW1FN _0x0,4
000080 d0da      	RCALL SUBOPT_0x1
                 ; 0000 001C         if (input_data.3==0)
                 _0x8:
000081 99b3      	SBIC 0x16,3
000082 c003      	RJMP _0x9
                 ; 0000 001D             lcd_putsf("*");
                +
000083 e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000084 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000085 d0d5      	RCALL SUBOPT_0x1
                 ; 0000 001E         keypad_port=0b10111111;
                 _0x9:
000086 ebef      	LDI  R30,LOW(191)
000087 d0ce      	RCALL SUBOPT_0x0
                 ; 0000 001F         lcd_gotoxy(0,0);
                 ; 0000 0020         if (input_data.0==0)
000088 99b0      	SBIC 0x16,0
000089 c003      	RJMP _0xA
                 ; 0000 0021             lcd_putsf("2");
                +
00008a e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
00008b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
00008c d0ce      	RCALL SUBOPT_0x1
                 ; 0000 0022         if (input_data.1==0)
                 _0xA:
00008d 99b1      	SBIC 0x16,1
00008e c003      	RJMP _0xB
                 ; 0000 0023             lcd_putsf("5");
                +
00008f e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
000090 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
000091 d0c9      	RCALL SUBOPT_0x1
                 ; 0000 0024         if (input_data.2==0)
                 _0xB:
000092 99b2      	SBIC 0x16,2
000093 c003      	RJMP _0xC
                 ; 0000 0025             lcd_putsf("8");
                +
000094 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
000095 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
000096 d0c4      	RCALL SUBOPT_0x1
                 ; 0000 0026         if (input_data.3==0)
                 _0xC:
000097 99b3      	SBIC 0x16,3
000098 c003      	RJMP _0xD
                 ; 0000 0027             lcd_putsf("0");
                +
000099 e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
00009a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
00009b d0bf      	RCALL SUBOPT_0x1
                 ; 0000 0028         keypad_port=0b01111111;
                 _0xD:
00009c e7ef      	LDI  R30,LOW(127)
00009d d0b8      	RCALL SUBOPT_0x0
                 ; 0000 0029         lcd_gotoxy(0,0);
                 ; 0000 002A         if (input_data.0==0)
00009e 99b0      	SBIC 0x16,0
00009f c003      	RJMP _0xE
                 ; 0000 002B             lcd_putsf("3");
                +
0000a0 e6e4     +LDI R30 , LOW ( 2 * _0x0 + ( 16 ) )
0000a1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW1FN _0x0,16
0000a2 d0b8      	RCALL SUBOPT_0x1
                 ; 0000 002C         if (input_data.1==0)
                 _0xE:
0000a3 99b1      	SBIC 0x16,1
0000a4 c003      	RJMP _0xF
                 ; 0000 002D             lcd_putsf("6");
                +
0000a5 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
0000a6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
0000a7 d0b3      	RCALL SUBOPT_0x1
                 ; 0000 002E         if (input_data.2==0)
                 _0xF:
0000a8 99b2      	SBIC 0x16,2
0000a9 c003      	RJMP _0x10
                 ; 0000 002F             lcd_putsf("9");
                +
0000aa e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
0000ab e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
0000ac d0ae      	RCALL SUBOPT_0x1
                 ; 0000 0030         if (input_data.3==0)
                 _0x10:
0000ad 99b3      	SBIC 0x16,3
0000ae c003      	RJMP _0x11
                 ; 0000 0031             lcd_putsf("#");
                +
0000af e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
0000b0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
0000b1 d0a9      	RCALL SUBOPT_0x1
                 ; 0000 0032        }
                 _0x11:
0000b2 cfbd      	RJMP _0x3
                 ; 0000 0033 }
                 _0x12:
0000b3 cfff      	RJMP _0x12
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
0000b4 81e8      	LD   R30,Y
0000b5 71e0      	ANDI R30,LOW(0x10)
0000b6 f011      	BREQ _0x2000004
0000b7 9adc      	SBI  0x1B,4
0000b8 c001      	RJMP _0x2000005
                 _0x2000004:
0000b9 98dc      	CBI  0x1B,4
                 _0x2000005:
0000ba 81e8      	LD   R30,Y
0000bb 72e0      	ANDI R30,LOW(0x20)
0000bc f011      	BREQ _0x2000006
0000bd 9add      	SBI  0x1B,5
0000be c001      	RJMP _0x2000007
                 _0x2000006:
0000bf 98dd      	CBI  0x1B,5
                 _0x2000007:
0000c0 81e8      	LD   R30,Y
0000c1 74e0      	ANDI R30,LOW(0x40)
0000c2 f011      	BREQ _0x2000008
0000c3 9ade      	SBI  0x1B,6
0000c4 c001      	RJMP _0x2000009
                 _0x2000008:
0000c5 98de      	CBI  0x1B,6
                 _0x2000009:
0000c6 81e8      	LD   R30,Y
0000c7 78e0      	ANDI R30,LOW(0x80)
0000c8 f011      	BREQ _0x200000A
0000c9 9adf      	SBI  0x1B,7
0000ca c001      	RJMP _0x200000B
                 _0x200000A:
0000cb 98df      	CBI  0x1B,7
                 _0x200000B:
                +
0000cc e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
0000cd 958a     +DEC R24
0000ce f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
0000cf 9ada      	SBI  0x1B,2
                +
0000d0 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000d1 958a     +DEC R24
0000d2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0000d3 98da      	CBI  0x1B,2
                +
0000d4 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000d5 958a     +DEC R24
0000d6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0000d7 c07c      	RJMP _0x2020001
                 __lcd_write_data:
0000d8 81e8      	LD   R30,Y
0000d9 93ea      	ST   -Y,R30
0000da dfd9      	RCALL __lcd_write_nibble_G100
0000db 81e8          ld    r30,y
0000dc 95e2          swap  r30
0000dd 83e8          st    y,r30
0000de 81e8      	LD   R30,Y
0000df 93ea      	ST   -Y,R30
0000e0 dfd3      	RCALL __lcd_write_nibble_G100
                +
0000e1 ec88     +LDI R24 , LOW ( 200 )
0000e2 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0000e3 9701     +SBIW R24 , 1
0000e4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0000e5 c06e      	RJMP _0x2020001
                 _lcd_gotoxy:
0000e6 81e8      	LD   R30,Y
0000e7 e0f0      	LDI  R31,0
0000e8 5ae0      	SUBI R30,LOW(-__base_y_G100)
0000e9 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000ea 81e0      	LD   R30,Z
0000eb 81a9      	LDD  R26,Y+1
0000ec 0fea      	ADD  R30,R26
0000ed 93ea      	ST   -Y,R30
0000ee dfe9      	RCALL __lcd_write_data
0000ef 8059      	LDD  R5,Y+1
0000f0 8048      	LDD  R4,Y+0
0000f1 9622      	ADIW R28,2
0000f2 9508      	RET
                 _lcd_clear:
0000f3 e0e2      	LDI  R30,LOW(2)
0000f4 d069      	RCALL SUBOPT_0x2
0000f5 e0ec      	LDI  R30,LOW(12)
0000f6 93ea      	ST   -Y,R30
0000f7 dfe0      	RCALL __lcd_write_data
0000f8 e0e1      	LDI  R30,LOW(1)
0000f9 d064      	RCALL SUBOPT_0x2
0000fa e0e0      	LDI  R30,LOW(0)
0000fb 2e4e      	MOV  R4,R30
0000fc 2e5e      	MOV  R5,R30
0000fd 9508      	RET
                 _lcd_putchar:
0000fe 81a8      	LD   R26,Y
0000ff 30aa      	CPI  R26,LOW(0xA)
000100 f011      	BREQ _0x2000011
000101 1457      	CP   R5,R7
000102 f048      	BRLO _0x2000010
                 _0x2000011:
000103 e0e0      	LDI  R30,LOW(0)
000104 93ea      	ST   -Y,R30
000105 9443      	INC  R4
000106 924a      	ST   -Y,R4
000107 dfde      	RCALL _lcd_gotoxy
000108 81a8      	LD   R26,Y
000109 30aa      	CPI  R26,LOW(0xA)
00010a f409      	BRNE _0x2000013
00010b c048      	RJMP _0x2020001
                 _0x2000013:
                 _0x2000010:
00010c 9453      	INC  R5
00010d 9ad8      	SBI  0x1B,0
00010e 81e8      	LD   R30,Y
00010f 93ea      	ST   -Y,R30
000110 dfc7      	RCALL __lcd_write_data
000111 98d8      	CBI  0x1B,0
000112 c041      	RJMP _0x2020001
                 _lcd_putsf:
000113 931a      	ST   -Y,R17
                 _0x2000017:
000114 81e9      	LDD  R30,Y+1
000115 81fa      	LDD  R31,Y+1+1
000116 9631      	ADIW R30,1
000117 83e9      	STD  Y+1,R30
000118 83fa      	STD  Y+1+1,R31
000119 9731      	SBIW R30,1
00011a 91e4      	LPM  R30,Z
00011b 2f1e      	MOV  R17,R30
00011c 30e0      	CPI  R30,0
00011d f019      	BREQ _0x2000019
00011e 931a      	ST   -Y,R17
00011f dfde      	RCALL _lcd_putchar
000120 cff3      	RJMP _0x2000017
                 _0x2000019:
000121 8118      	LDD  R17,Y+0
000122 9623      	ADIW R28,3
000123 9508      	RET
                 _lcd_init:
000124 9ad4      	SBI  0x1A,4
000125 9ad5      	SBI  0x1A,5
000126 9ad6      	SBI  0x1A,6
000127 9ad7      	SBI  0x1A,7
000128 9ad2      	SBI  0x1A,2
000129 9ad0      	SBI  0x1A,0
00012a 9ad1      	SBI  0x1A,1
00012b 98da      	CBI  0x1B,2
00012c 98d8      	CBI  0x1B,0
00012d 98d9      	CBI  0x1B,1
00012e 8078      	LDD  R7,Y+0
00012f 81e8      	LD   R30,Y
000130 58e0      	SUBI R30,-LOW(128)
                +
000131 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000133 81e8      	LD   R30,Y
000134 54e0      	SUBI R30,-LOW(192)
                +
000135 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000137 e1e4      	LDI  R30,LOW(20)
000138 e0f0      	LDI  R31,HIGH(20)
000139 93fa      	ST   -Y,R31
00013a 93ea      	ST   -Y,R30
00013b 940e 016e 	CALL _delay_ms
00013d d028      	RCALL SUBOPT_0x3
00013e d027      	RCALL SUBOPT_0x3
00013f d026      	RCALL SUBOPT_0x3
000140 e2e0      	LDI  R30,LOW(32)
000141 93ea      	ST   -Y,R30
000142 df71      	RCALL __lcd_write_nibble_G100
                +
000143 e980     +LDI R24 , LOW ( 400 )
000144 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000145 9701     +SBIW R24 , 1
000146 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000147 e2e8      	LDI  R30,LOW(40)
000148 93ea      	ST   -Y,R30
000149 df8e      	RCALL __lcd_write_data
00014a e0e4      	LDI  R30,LOW(4)
00014b 93ea      	ST   -Y,R30
00014c df8b      	RCALL __lcd_write_data
00014d e8e5      	LDI  R30,LOW(133)
00014e 93ea      	ST   -Y,R30
00014f df88      	RCALL __lcd_write_data
000150 e0e6      	LDI  R30,LOW(6)
000151 93ea      	ST   -Y,R30
000152 df85      	RCALL __lcd_write_data
000153 df9f      	RCALL _lcd_clear
                 _0x2020001:
000154 9621      	ADIW R28,1
000155 9508      	RET
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000156 bbe8      	OUT  0x18,R30
000157 e0e0      	LDI  R30,LOW(0)
000158 93ea      	ST   -Y,R30
000159 93ea      	ST   -Y,R30
00015a cf8b      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1:
00015b 93fa      	ST   -Y,R31
00015c 93ea      	ST   -Y,R30
00015d cfb5      	RJMP _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
00015e 93ea      	ST   -Y,R30
00015f df78      	RCALL __lcd_write_data
000160 e0e3      	LDI  R30,LOW(3)
000161 e0f0      	LDI  R31,HIGH(3)
000162 93fa      	ST   -Y,R31
000163 93ea      	ST   -Y,R30
000164 940c 016e 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000166 e3e0      	LDI  R30,LOW(48)
000167 93ea      	ST   -Y,R30
000168 df4b      	RCALL __lcd_write_nibble_G100
                +
000169 e980     +LDI R24 , LOW ( 400 )
00016a e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00016b 9701     +SBIW R24 , 1
00016c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00016d 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00016e 91e9      	ld   r30,y+
00016f 91f9      	ld   r31,y+
000170 9630      	adiw r30,0
000171 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000172 ea80     +LDI R24 , LOW ( 0xFA0 )
000173 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000174 9701     +SBIW R24 , 1
000175 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000176 95a8      	wdr
000177 9731      	sbiw r30,1
000178 f7c9      	brne __delay_ms0
                 __delay_ms1:
000179 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   6 r26:   9 r27:   2 r28:   4 r29:   1 r30: 103 r31:  27 
x  :   3 y  :  50 z  :   9 
Registers used: 18 out of 35 (51.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   5 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   8 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   1 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   0 cpi   :   3 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  23 ld    :  16 ldd   :   7 ldi   :  70 
lds   :   0 lpm   :   9 lsl   :   0 lsr   :   0 mov   :   3 movw  :   3 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  10 pop   :   0 push  :   0 rcall :  36 ret   :   6 
reti  :   0 rjmp  :  26 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :  13 sbic  :  12 sbis  :   0 sbiw  :   9 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  29 std   :   2 sts   :   2 sub   :   0 subi  :   3 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 35 out of 116 (30.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0002f4    722     34    756   32768   2.3%
[.dseg] 0x000060 0x000264      0      4      4    2143   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
